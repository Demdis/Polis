# before running docker-compose up for the first time,
# either do a pull:
# docker-compose pull
# or do a build:
# GIT_HASH $(git rev-parse --short HEAD) docker-compose up --detach

# subsequently you should only need to run:
# docker-compose up --detach

# force a full re-build with no cache from previous builds:
# docker-compose build --build-arg GIT_HASH $(git rev-parse --short HEAD) --parallel --no-cache

# to stop:
# docker-compose down

version: "3.4"

services:
  server:
    container_name: polis-server
    env_file: ./server/docker-dev.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    image: demdis/server:prod
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      - "postgres"
      - "file-server"
    networks:
      - "polis-net"
    ports:
      - "5001:5001"

  math:
    container_name: polis-math
    env_file: ./math/docker-dev.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    image: demdis/math:prod
    depends_on:
      - "postgres"
    build:
      context: ./math
    networks:
      - "polis-net"

  postgres:
    container_name: polis-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    image: demdis/db:prod
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile-db
    networks:
      - "polis-net"
    ports:
      - "6543:5432"
    volumes:
      - "backups:/backups"
      - "postgres:/var/lib/postgresql/data"

  caddy:
    container_name: polis-caddy
    image: caddy:2-alpine
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - "server"
    networks:
      - "polis-net"
    ports:
      - "80:80"
      - "443:443"

  file-server:
    container_name: polis-file-server
    image: demdis/file-server:prod
    env_file: ./.env
    build:
      context: ./
      dockerfile: file-server/Dockerfile
      args:
        GIT_HASH: "${GIT_HASH}"
    networks:
      - "polis-net"
    ports:
      - "8080:8080"

networks:
  polis-net:

volumes:
  backups:
  postgres:
